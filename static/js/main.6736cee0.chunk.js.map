{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","messageData","className","s","body","avatar","src","alt","textBody","name","message","time","HW1","title","Affair","props","affair","priority","buttonDelete","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","buttons","button","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","wrapp","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","value","onChange","input","GreetingContainer","users","addUserCallback","setName","setError","length","event","currentTarget","alert","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","errorInput","e","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.6736cee0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Affairs_title__1h215\",\"wrapp\":\"Affairs_wrapp__3G2pW\",\"body\":\"Affairs_body__3Y1id\",\"affair\":\"Affairs_affair__2TG2-\",\"buttons\":\"Affairs_buttons__cs-tD\",\"button\":\"Affairs_button__FQ7rg\",\"buttonDelete\":\"Affairs_buttonDelete__3ldTT\",\"name\":\"Affairs_name__27iXT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Message_title__2tFy4\",\"avatar\":\"Message_avatar__24Xyo\",\"body\":\"Message_body__1Iqe2\",\"textBody\":\"Message_textBody__2xOJI\",\"name\":\"Message_name__1CMH4\",\"message\":\"Message_message__3YZ5Y\",\"time\":\"Message_time__Y_9hP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapp\":\"Greeting_wrapp__1D86Q\",\"title\":\"Greeting_title__FLodR\",\"input\":\"Greeting_input__1wqjd\",\"button\":\"Greeting_button__3TANj\",\"error\":\"Greeting_error__1Nn6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3SgvG\",\"errorInput\":\"SuperInputText_errorInput__1nJUy\",\"error\":\"SuperInputText_error__1tLMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3NKrq\",\"column\":\"HW4_column__10PUF\",\"testSpanError\":\"HW4_testSpanError__38ID_\",\"title\":\"HW4_title__1du7m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__knn4h\",\"red\":\"SuperButton_red__21JhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1WK8u\",\"spanClassName\":\"SuperCheckbox_spanClassName__l3Bdm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3Eddm\"};","import React from 'react'\nimport s from './Message.module.css'\ntype messageDataProps = {\n  avatar: string\n  name: string\n  message: string\n  time: string\n}\n\nfunction Message(messageData: messageDataProps) {\n  return (\n    <div className={s.body}>\n      <div className={s.avatar}>\n        <img src={messageData.avatar} alt={'ava'}/>\n      </div>\n      <div className={s.textBody}>\n        <div className={s.name}>\n          {messageData.name}\n        </div>\n        <div className={s.message}>\n          {messageData.message}\n        </div>\n        <div className={s.time}>\n          {messageData.time}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Message\n","import Message from \"./Message\";\nimport s from './Message.module.css'\n\nconst messageData = {\n  avatar: 'https://papik.pro/uploads/posts/2021-09/1631739726_7-papik-pro-p-prostie-risunki-yedinorozhki-7.jpg',\n  name: 'Eduard',\n  message: 'Hi, it\\'s homework is done :)',\n  time: '22:00',\n}\n\nfunction HW1() {\n  return (\n    <div>\n      <div className={s.title}>Homework 1:</div>\n      <Message\n        avatar={messageData.avatar}\n        name={messageData.name}\n        message={messageData.message}\n        time={messageData.time}\n      />\n    </div>\n  )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n  // key не нужно типизировать\n  affair: AffairType\n  deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n  const deleteCallback = () => {\n    props.deleteAffairCallback(props.affair._id)\n  }// need to fix\n\n  return (\n    <div className={s.affair}>\n      <div className={s.name}>{props.affair.name}</div>\n      <div>{props.affair.priority}</div>\n      <button className={s.buttonDelete} onClick={deleteCallback}>X</button>\n    </div>\n  )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n  data: Array<AffairType>\n  setFilter: (setFilter: FilterType) => void\n  deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n  const mappedAffairs = props.data.map((a: AffairType) => (\n    <Affair // should work\n      key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n      affair={a}\n      deleteAffairCallback={props.deleteAffairCallback}\n    />\n  ))\n\n  const setAll = () => {\n    props.setFilter('all')\n  } // need to fix\n  const setHigh = () => {\n    props.setFilter('high')\n  }\n  const setMiddle = () => {\n    props.setFilter('middle')\n  }\n  const setLow = () => {\n    props.setFilter('low')\n  }\n\n  return (\n    <div className={s.body}>\n      <div className={s.title}>Homework 2:</div>\n      <div>{mappedAffairs}</div>\n      <div className={s.buttons}>\n        <button className={s.button} onClick={setAll}><b>All</b></button>\n        <button className={s.button} onClick={setHigh}><b>High</b></button>\n        <button className={s.button} onClick={setMiddle}><b>Middle</b></button>\n        <button className={s.button} onClick={setLow}><b>Low</b></button>\n      </div>\n    </div>\n  )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\nimport s from './Affairs.module.css'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\nexport type AffairType = {\n  _id: number\n  name: string\n  priority: string\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n  {_id: 1, name: 'React', priority: 'high'},\n  {_id: 2, name: 'anime', priority: 'low'},\n  {_id: 3, name: 'games', priority: 'low'},\n  {_id: 4, name: 'work', priority: 'high'},\n  {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n  if (filter === 'all') return affairs\n  else return affairs.filter(f => f.priority === filter)\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n  return affairs.filter(f => f._id !== _id)\n}\n\nfunction HW2() {\n  const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n  const [filter, setFilter] = useState<FilterType>('all')\n\n  const filteredAffairs = filterAffairs(affairs, filter)\n  const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n  return (\n    <div className={s.wrapp}>\n      <Affairs\n        data={filteredAffairs}\n        setFilter={setFilter}\n        deleteAffairCallback={deleteAffairCallback}\n      />\n    </div>\n  )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n  name: string // need to fix any\n  setNameCallback: (event: ChangeEvent<HTMLInputElement>) => void // need to fix any\n  addUser: () => void // need to fix any\n  error: string // need to fix any\n  totalUsers: string // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n  {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n\n  return (\n    <div className={s.wrapp}>\n      <div className={s.title}>Homework 3 :</div>\n      <div>\n        <input value={name} onChange={setNameCallback} className={s.input}/>\n        <button onClick={addUser} className={s.button}>add</button>\n      </div>\n      <span className={s.error}>{error}</span>\n      <span>{totalUsers}</span>\n    </div>\n  )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n  users: Array<UserType> // need to fix any\n  addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n  const [name, setName] = useState<string>('') // need to fix any\n  const [error, setError] = useState<string>('Entered Text!') // need to fix any\n\n  const setNameCallback = (event: ChangeEvent<HTMLInputElement>) => { // need to fix any\n    if (event.currentTarget.value) {\n      setName(event.currentTarget.value)\n      setError('')\n    } else {\n      setName('')\n      setError('Entered Text!')\n    }\n  }\n  const addUser = () => {\n    if (name.length) {\n      addUserCallback(name)\n      alert(`Hello ${name} !`)\n      setName('')\n    } else {\n      alert('Entered Text!')\n    }\n    // need to fix\n  }\n  const totalUsers = `Количество вводов: ${users.length}`// need to fix\n  return (\n    <Greeting\n      name={name}\n      setNameCallback={setNameCallback}\n      addUser={addUser}\n      error={error}\n      totalUsers={totalUsers}\n    />\n  )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\nimport s from './Greeting.module.css'\n\n// types\nexport type UserType = {\n  _id: string // need to fix any\n  name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n  const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n  const addUserCallback = (name: string) => { // need to fix any\n    let newUser = {_id: v1(), name: name}\n    setUsers([...users, newUser]) // need to fix\n  }\n\n  return (\n    <div>\n      <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n    </div>\n  )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n  onChangeText?: (value: string) => void\n  onEnter?: () => void\n  error?: string\n  spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n  {\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n    onChange, onChangeText,\n    onKeyPress, onEnter,\n    error,\n    className, spanClassName,\n\n    ...restProps// все остальные пропсы попадут в объект restProps\n  }\n) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange // если есть пропс onChange\n    && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n    onChangeText && onChangeText(e.currentTarget.value)\n  }\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n    onKeyPress && onKeyPress(e);\n\n    onEnter // если есть пропс onEnter\n    && e.key === 'Enter' // и если нажата кнопка Enter\n    && onEnter() // то вызвать его\n  }\n\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n  const finalInputClassName = `${restProps.value !== '' ? s.superInput : s.errorInput} ${className}` // need to fix with (?:) and s.superInput\n\n  return (\n    <>\n      <input\n        type={'text'}\n        onChange={onChangeCallback}\n        onKeyPress={onKeyPressCallback}\n        className={finalInputClassName}\n\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n      />\n      {error && <span className={finalSpanClassName}>{error}</span>}\n    </>\n  )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n  red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n  {\n    red, className,\n    ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n  }\n) => {\n  const finalClassName = `${red ? s.red : s.default} ${className}`\n\n  return (\n    <button\n      className={finalClassName}\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n    />\n  )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n  onChangeChecked?: (checked: boolean) => void\n  spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n  {\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n    onChange, onChangeChecked,\n    className, spanClassName,\n    children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n    ...restProps// все остальные пропсы попадут в объект restProps\n  }\n) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    // сделайте так чтоб работал onChange и onChangeChecked\n    onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    onChange && onChange(e)\n  }\n\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n  return (\n    <label>\n      <input\n        type={'checkbox'}\n        onChange={onChangeCallback}\n        className={finalInputClassName}\n\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n      />\n      {children && <span className={s.spanClassName}>{children}</span>}\n    </label> // благодаря label нажатие на спан передастся в инпут\n  )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n  const [text, setText] = useState<string>('')\n  const error = text ? '' : 'error'\n\n  const showAlert = () => {\n    if (error) {\n      alert('введите текст...')\n    } else {\n      alert(text) // если нет ошибки показать текст\n    }\n  }\n\n  const [checked, setChecked] = useState<boolean>(false)\n  const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n  return (\n    <div>\n      <div className={s.title}>Homework 4 :</div>\n\n      <div className={s.column}>\n        <SuperInputText\n          value={text}\n          onChangeText={setText}\n          onEnter={showAlert}\n          error={error}\n          // spanClassName={s.testSpanError}\n        />\n\n        <SuperInputText\n          className={s.blue} // проверьте, рабоет ли смешивание классов\n        />\n\n        {/*----------------------------------------------------*/}\n\n        <SuperButton>\n          default\n        </SuperButton>\n\n        <SuperButton\n          red // пропсу с булевым значением не обязательно указывать true\n          onClick={showAlert}\n        >\n          delete {/*// название кнопки попадёт в children*/}\n        </SuperButton>\n\n        <SuperButton disabled>\n          disabled\n        </SuperButton>\n\n        {/*----------------------------------------------------*/}\n\n        <SuperCheckbox\n          checked={checked}\n          onChangeChecked={setChecked}\n        >\n          some text {/*// этот текст попадёт в children*/}\n        </SuperCheckbox>\n\n        {/*// onChange тоже должен работать*/}\n        <SuperCheckbox checked={checked} onChange={testOnChange}/>\n      </div>\n    </div>\n  )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from '../../../p2-homeworks/h4/HW4';\n\nfunction App() {\n  return (\n    <div className={s.App}>\n      <HW1/>\n      <HW2/>\n      <HW3/>\n      <HW4/>\n      {/*<HW5/>*/}\n\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}